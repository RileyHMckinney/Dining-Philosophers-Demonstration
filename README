Please read this file in its entirety befor running the program.

HOW TO RUN PROGRAM: 
1 - Execute the Makefile with 'make'

2 - Execute the program with './dining_philo <integer>' where <integer> is
    an integer value representing the number of philosophers

3 - Select with method by which you want to run the program using options A, B, C, or D.
    Options: 
    - A - Each philosopher will think and eat one time, implemented using the tournament tree
    - B - Each philosopher will think, eat, and then repeat indefinitely using a tournament tree
    - C - Each philosopher will think and eat one time, implemented using "fine-grained" approach
    - D - Each philosopher will think, eat, and then repeat indefinitely using the "fine-grained" approach
    
    ASIDE: Selection of option B or D will result in an INTENTIONAL infinite loop which will need
        to be manually terminated.

4 - After running program, execute 'make clean' to delete the object and execuatable files.

POSTSCRIPT: Often, the printed output is garbled, as multiple threads are attempting to 
    print (or "think") at the same time. This is INTENTIONAL. The assignment specifies that this program was 
    not allowed to use built in locks, and thus the only locks are on when each thread is in the "eating" phase.

    If there is any doubt about my ability to implement locks using built-in locks, 
    please feel free to reach out to me.
